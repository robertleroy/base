/* Write your global styles here, in PostCSS syntax */

@import '$lib/styles/variables.css'; 
@import '$lib/styles/base.css';
@import '$lib/styles/lists.css'; 
@import '$lib/styles/links.css'; 
@import '$lib/styles/forms.css'; 
@import '$lib/styles/shadows.css'; 
@import '$lib/styles/vs-dark.css'; 
/* @import '$lib/styles/codeblock.css';  */
/* @import '$lib/styles/blockquote.css';  */
/* @import '$lib/styles/tables.css';  */

:root {
  --header-h: 4rem; 
  --sidebar-w: 100%; 
  --max-width: 1600px;
  --horiz-padding: 2rem;
}

#app {
  display: grid;
  grid-template-rows: auto 1fr ;
  height: 100%;
}

.title, .side-nav, .nav-bar {
  --link-color: var(--font-color);
}

/* #region layout */
header {
  position: fixed;
  top: 0;
  width: 100%; 
  height: var(--header-h);
  z-index: 20;
}

main { margin-top: var(--header-h); }

.router {
  max-width: var(--max-width);
  margin: 0 auto;
}

aside {  
  position: fixed;
  left: -100%;
  height: 100%;
  width: var(--sidebar-w);
  background: var(--background-color);
  z-index: 10;
}

.sidebarOpen {
  left: 0%;
}

.page {
  margin-left: 0;
}

.btnMenu {
  position: fixed;
  top: 5.625rem;
  right: 2rem;
  height: calc(var(--line-height) * 1em);
  display: grid;
  place-content: center center;  
  background: var(--background-color);  
  z-index: 15;   

  cursor: pointer;
}
/* #endregion layout */


/* #region header */ 
header {
  display: flex;
  align-items: center;
  background: var(--background-color);
  border-bottom: 1px solid #ccc;
}

.flex {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  gap: 0 1ch;
  width: 100%;
  max-width: 1600px;
  margin: 0 auto;
  padding: 0 var(--horiz-padding);
  transform: translate(0); /* for positioning btnMenu */
}

.title {
  display: flex;
  height: 100%;
  align-items: baseline;
  gap: 0 2ch;

  svg {
    line-height: 1;
    width: 1em;
    font-size: 3.5rem;
  }

  h1 {
    display: none; 
    font-size: var(--h4);

    @media (min-width: 600px) {
      display: initial;
    }
  }

  &:hover:not(:active) {
    text-decoration: none;
    color: #517394;
    /* color: var(--active-dark); */
  }
}

.nav-bar {
  display: flex;
  gap: 0 1ch;

  a { font-size: var(--h7); }
}
/* #endregion header */


/* #region side-nav */
aside {
  border-right: 1px solid #ccc;
  transition: 0.2s;
  overflow-y: auto;
}
.side-nav { padding: 1.5rem var(--horiz-padding); }

.side-nav:not(:first-of-type) { padding-top: 0; }

.sidenav-header {
  font-size: var(--h5);
  font-weight: 600;
  line-height: var(--h1); /* align .nav-header with .content h2  */
}
.sidenav-item {
  margin-left: 1rem;
}
.nestedNav {
  margin-top: 0.25rem;
  margin-left: 2rem;
}
/* #endregion side-bar */


/* #region page */
.content {
  padding: 1rem var(--horiz-padding);
}
/* #endregion page */


.active {
  color: var(--active-color);

  a { color: inherit; }
}

@media (min-width: 900px) {
  :root { --sidebar-w: 300px; }
  aside { left: 0%; }
  .page { margin-left: var(--sidebar-w); }
  .btnMenu { display: none; }
  .content { max-width: 45rem; }
}

@media (min-width: 1200px) {
  .content { margin-left: 10%; }
}

@media (min-width: 1600px) {
  .content { max-width: 840px; }
  aside { left: calc((100% - 1600px)/2); }
}