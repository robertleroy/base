import{S as E,i as H,s as I,e as m,c as f,b as P,g as r,W as q,Y as T,I as j,E as R,d as l,Q as x,$ as C,a0 as L,t as Q,k,w as U,a as B,h as W,m as h,x as Y,H as z,y as A,a1 as F,q as G,o as J,B as K,R as O}from"../../../chunks/index-05c97b0b.js";import{u as D}from"../../../chunks/store-70b76800.js";import{i as V}from"../../../chunks/action-4431b50a.js";import"../../../chunks/index-e8995614.js";function X(p){let s,u,a;return{c(){s=m("input"),this.h()},l(t){s=f(t,"INPUT",{type:!0,placeholder:!0}),this.h()},h(){P(s,"type","tel"),P(s,"placeholder",p[1].mask),s.required=!0},m(t,o){r(t,s,o),q(s,p[0]),u||(a=[T(V.call(null,s,p[1])),j(s,"input",p[2])],u=!0)},p(t,[o]){o&1&&q(s,t[0])},i:R,o:R,d(t){t&&l(s),u=!1,x(a)}}}function Z(p,s,u){let{phoneNum:a=void 0}=s;const t={mask:"(000) 000-0000"};function o(){a=this.value,u(0,a)}return p.$$set=i=>{"phoneNum"in i&&u(0,a=i.phoneNum)},[a,t,o]}class nn extends E{constructor(s){super(),H(this,s,Z,X,I,{phoneNum:0})}}function sn(p){let s,u,a,t,o,i,w,_,b,d,$,N,c,M=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> userData <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$lib/stores/store'</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> Phone <span class="token keyword">from</span> <span class="token string">'$lib/components/phone.svelte'</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> phoneNum<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Phone</span> <span class="token attr-name"><span class="token namespace">bind:</span>phoneNum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;$userData.phone&#125;/</span><span class="token punctuation">></span></span></code>`,y;function S(n){p[1](n)}let g={};return p[0].phone!==void 0&&(g.phoneNum=p[0].phone),i=new nn({props:g}),C.push(()=>L(i,"phoneNum",S)),{c(){s=m("h2"),u=Q("Phone"),a=k(),t=m("br"),o=k(),U(i.$$.fragment),_=k(),b=m("br"),d=k(),$=m("br"),N=k(),c=m("pre"),this.h()},l(n){s=f(n,"H2",{});var e=B(s);u=W(e,"Phone"),e.forEach(l),a=h(n),t=f(n,"BR",{}),o=h(n),Y(i.$$.fragment,n),_=h(n),b=f(n,"BR",{}),d=h(n),$=f(n,"BR",{}),N=h(n),c=f(n,"PRE",{class:!0});var v=B(c);v.forEach(l),this.h()},h(){P(c,"class","language-html")},m(n,e){r(n,s,e),z(s,u),r(n,a,e),r(n,t,e),r(n,o,e),A(i,n,e),r(n,_,e),r(n,b,e),r(n,d,e),r(n,$,e),r(n,N,e),r(n,c,e),c.innerHTML=M,y=!0},p(n,[e]){const v={};!w&&e&1&&(w=!0,v.phoneNum=n[0].phone,F(()=>w=!1)),i.$set(v)},i(n){y||(G(i.$$.fragment,n),y=!0)},o(n){J(i.$$.fragment,n),y=!1},d(n){n&&l(s),n&&l(a),n&&l(t),n&&l(o),K(i,n),n&&l(_),n&&l(b),n&&l(d),n&&l($),n&&l(N),n&&l(c)}}}function an(p,s,u){let a;O(p,D,o=>u(0,a=o));function t(o){p.$$.not_equal(a.phone,o)&&(a.phone=o,D.set(a))}return[a,t]}class ln extends E{constructor(s){super(),H(this,s,an,sn,I,{})}}export{ln as default};
